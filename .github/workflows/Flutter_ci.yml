 name: Flutter CI/CD
 
 on:
   push:
     branches:
       - main
 
 jobs:
   build:
     runs-on: ubuntu-latest
 
     steps:
     - name: Checkout source code
       uses: actions/checkout@v3
 
     - name: Set up Flutter
       uses: subosito/flutter-action@v2
       with:
         flutter-version: '3.24.0' # Matches your Flutter SDK version
         channel: 'stable'

     - name: Install dependencies
       run: flutter pub get
       
     - name: Clean the build directory
       run: flutter clean

     - name: Install dependencies
       run: flutter pub get
 
     - name: Build APK
       run: flutter build apk --release
       
     - name: Upload APK artifact
       uses: actions/upload-artifact@v3
       with:
         name: my-flutter-app-apk
         path: build/app/outputs/flutter-apk/app-release.apk

     - name: Upload APK to InstallOnAir
       run: |
         curl -X POST "https://installonair.com/" \
         -F "file=@build/app/outputs/flutter-apk/app-release.apk" \
         -F "message=New APK from GitHub Actions" \
         -F "release_notes=Uploaded automatically from GitHub Actions"


     - name: Clean up old build artifacts
       run: |
         # GitHub API URL
         API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/artifacts"
         
         # Get the list of artifacts
         ARTIFACTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $API_URL)
         
         # Get the current timestamp
         CURRENT_TIME=$(date +%s)
         
         # Iterate over each artifact
         echo "$ARTIFACTS" | jq -c '.artifacts[]' | while read -r ARTIFACT; do
           NAME=$(echo "$ARTIFACT" | jq -r '.name')
           ID=$(echo "$ARTIFACT" | jq -r '.id')
           CREATED_AT=$(echo "$ARTIFACT" | jq -r '.created_at')
         
           # Convert creation time to timestamp
           ARTIFACT_TIME=$(date -d "$CREATED_AT" +%s)
         
           # Calculate age of the artifact in days
           AGE=$(( (CURRENT_TIME - ARTIFACT_TIME) / 86400 ))
         
           # Delete if older than 1 day
           if [ "$AGE" -gt 1 ]; then
             echo "Deleting artifact: $NAME"
             curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" "$API_URL/$ID"
           fi
         done
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
